import json
import re
open_bracket = ["[","{","("] 
close_bracket = ["]","}",")"]
def validity(data): 
    stack = [] 
    for i in data: 
        if i in open_bracket: 
            stack.append(i) 
        elif i in close_bracket: 
            pos = close_bracket.index(i) 
            if ((len(stack) > 0) and
                (open_bracket[pos] == stack[len(stack)-1])): 
                stack.pop() 
            else: 
                return False
    if len(stack) == 0: 
        return True
    else: 
        return False

def querytojson(data):
    open_bracket = ["[","{","("] 
    close_bracket = ["]","}",")"] 
    y = validity(data)
    if y is True:
        data = data.replace('(','{')
        data = data.replace(')','}')
        data = data.replace('=',':')
        data = data.replace('&&','and')
        data = data.replace('||','or')
        ands = re.compile(r'(and)')
        ors = re.compile(r'(or)')
        andss = ands.findall(data)
        orss = ors.findall(data)
        nums = re.compile(r'\d')
        numss = nums.findall(data)
        a,b,c,d = numss[0],numss[1],numss[2],numss[3]
        if len(andss) == 2:
            inner = "and"
            outer = "or"
        else:
            inner = "or"
            outer = "and"
        formatt = {
         "query": {
        outer: [
        {
        inner: {
        "A": a,
        "B": b
        }
        },
        {
        inner: {
        "C": 4,
        "D": 5
        }
        }
        ]
        }
        }
        res = json.dumps(formatt)
        print(res)
    else:
        print("Invalid string")
        return False